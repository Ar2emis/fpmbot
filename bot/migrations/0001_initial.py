# Generated by Django 3.0 on 2020-01-01 14:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.IntegerField(null=True, verbose_name='telegram id')),
                ('name', models.TextField(default='', verbose_name='name')),
                ('nickname', models.TextField(default='', verbose_name='nickname')),
                ('token', models.TextField(verbose_name='token')),
            ],
            options={
                'verbose_name': 'bot',
                'verbose_name_plural': 'bot',
            },
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('group', models.TextField(verbose_name='group')),
                ('description', models.TextField(verbose_name='description')),
                ('file', models.FileField(upload_to='docs', verbose_name='file')),
            ],
            options={
                'verbose_name': 'doc',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='group name')),
                ('year', models.IntegerField(verbose_name='year')),
                ('subgroup_amount', models.IntegerField(verbose_name='subgroups amount')),
            ],
            options={
                'verbose_name': 'group',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('image_file', models.ImageField(upload_to='images', verbose_name='image file')),
            ],
            options={
                'verbose_name': 'image',
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'news category',
                'verbose_name_plural': 'news categories',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.TextField(verbose_name='sender name')),
                ('sender_username', models.TextField(verbose_name='sender username')),
                ('text', models.TextField(verbose_name='question text')),
                ('is_answered', models.BooleanField(default=False, verbose_name='question answered')),
            ],
            options={
                'verbose_name': 'question',
            },
        ),
        migrations.CreateModel(
            name='Spec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('spec_id', models.IntegerField(verbose_name='spec id')),
            ],
            options={
                'verbose_name': 'spec',
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('group', models.TextField(verbose_name='group')),
                ('text', models.TextField(verbose_name='text')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Texts',
                'verbose_name_plural': 'Texts',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.IntegerField(unique=True, verbose_name='telegram id')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='full name')),
                ('subgroup', models.IntegerField(blank=True, default=0, verbose_name='subgroup')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.Group')),
                ('spec', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.Spec')),
            ],
            options={
                'verbose_name': 'user',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subgroup', models.IntegerField(verbose_name='subgroup')),
                ('schedule', models.TextField(blank=True, null=True, verbose_name='schedule')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.Group')),
            ],
            options={
                'verbose_name': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('limit_date', models.DateField(verbose_name='limit date')),
                ('text', models.TextField(verbose_name='text')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.NewsCategory')),
                ('images', models.ManyToManyField(to='bot.Image')),
            ],
            options={
                'verbose_name': 'news',
                'verbose_name_plural': 'news',
            },
        ),
        migrations.CreateModel(
            name='Merch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('images', models.ManyToManyField(to='bot.Image')),
            ],
            options={
                'verbose_name': 'Merch',
                'verbose_name_plural': 'Merches',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='spec',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.Spec'),
        ),
        migrations.AddField(
            model_name='group',
            name='students',
            field=models.ManyToManyField(related_name='students', to='bot.User'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('paragraph', models.TextField(verbose_name='paragraph')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('added_date', models.DateField(verbose_name='added date')),
                ('max_points', models.IntegerField(verbose_name='maximum points')),
                ('actual_points', models.IntegerField(verbose_name='actual points')),
                ('participants', models.ManyToManyField(to='bot.User')),
            ],
            options={
                'verbose_name': 'Event',
            },
        ),
    ]
